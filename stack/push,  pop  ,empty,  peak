#include<iostream>
#include<stack>
using namespace std;
class Stack{
    //properties

    public:
       int *arr;
       int top;
       int size;

       //behaviour
    Stack(int size){
        this ->size=size;
        arr=new int[size];
        top=-1;

          }

     int push(int element)         //pushing
     {  if(size-top > 1)
         {  top++;
            arr[top]=element;   }

         else
         {
             cout<<"stack overflow"<<endl;
         }

     }
    int pop()                 //poping
    {
        if(top>=0)
         {
             top--;
         }
         else
         {
             cout<<"stack underflow "<<endl;
         }

    }
    int isEmpty()                 //empty
    {
        if(top==-1)
        {
            return true;
        }
        else
        {
            return false;
        }

    }

    int peek()                        //peak element
    {
        if(top >=-1)
            return arr[top];
        else{
            cout<<"stack  empty"<<endl;
        }

    }


};
int main()
{   Stack st(5);

    st.push(1);
    st.push(2);
    st.push(3);
    st.push(4);
    st.push(5);


    cout << st.peek() << endl;

    st.pop();
    cout << st.peek() << endl;

    st.pop();
}



